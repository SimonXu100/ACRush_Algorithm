// stack/ property: sub--overall: 都满足相应问题，还有对称性
// 问题建模（考虑边界情况）、思考适合的数据结构、分析问题的逻辑结构模型
class Solution {
    private HashMap<Character,Character> mappings;
    public Solution(){
        this.mappings  = new HashMap<Character,Character>();
        this.mappings.put('}','{');
        this.mappings.put(']','[');
        this.mappings.put(')','(');
    }
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<Character>();
        for(int i = 0; i < s.length(); i++ ){
           char c = s.charAt(i);
           if(this.mappings.containsKey(c)){
                 char toElement  = stack.empty()? '#':stack.pop();
                 if(toElement != this.mappings.get(c)){
                     return false;
                 }
           }
           else{
           		stack.push(c);
           }
       
        }
        return stack.isEmpty();
}